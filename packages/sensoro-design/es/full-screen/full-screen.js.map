{"version":3,"sources":["full-screen/full-screen.jsx"],"names":["React","useRef","useEffect","useState","classNames","useToggle","useFullScreen","FullScreen","props","prefixCls","className","style","children","onChange","isBody","targetRef","rootRef","status","toggle","current","domRef","setDomRef","isFullScreen","onClose","document","documentElement","changeFullScreen","defaultProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MAClBC,SADkB,GACqDD,KADrD,CAClBC,SADkB;AAAA,MACPC,SADO,GACqDF,KADrD,CACPE,SADO;AAAA,MACIC,KADJ,GACqDH,KADrD,CACIG,KADJ;AAAA,MACWC,QADX,GACqDJ,KADrD,CACWI,QADX;AAAA,MACqBC,QADrB,GACqDL,KADrD,CACqBK,QADrB;AAAA,MAC+BC,MAD/B,GACqDN,KADrD,CAC+BM,MAD/B;AAAA,MACuCC,SADvC,GACqDP,KADrD,CACuCO,SADvC;AAE1B,MAAMC,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;;AAF0B,mBAGDI,SAAS,CAAC,KAAD,CAHR;AAAA;AAAA,MAGnBY,MAHmB;AAAA,MAGXC,MAHW;;AAAA,kBAIEf,QAAQ,CAAC;AAAEgB,IAAAA,OAAO,EAAE;AAAX,GAAD,CAJV;AAAA;AAAA,MAInBC,MAJmB;AAAA,MAIXC,SAJW;;AAK1B,MAAMC,YAAY,GAAGhB,aAAa,CAACc,MAAD,EAASH,MAAT,EAAiB;AAC/CM,IAAAA,OAAO,EAAE;AAAA,aAAML,MAAM,CAAC,KAAD,CAAZ;AAAA;AADsC,GAAjB,CAAlC;AAGAhB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIY,MAAJ,EAAY;AACRO,MAAAA,SAAS,CAAC;AAAEF,QAAAA,OAAO,EAAEK,QAAQ,CAACC;AAApB,OAAD,CAAT;AACH,KAFD,MAGK,IAAIV,SAAJ,EAAe;AAChBM,MAAAA,SAAS,CAACN,SAAD,CAAT;AACH,KAFI,MAGA;AACDM,MAAAA,SAAS,CAACL,OAAD,CAAT;AACH;AACJ,GAVQ,EAUN,CAACR,KAAK,CAACM,MAAP,EAAeN,KAAK,CAACO,SAArB,CAVM,CAAT;;AAWA,MAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BR,IAAAA,MAAM;AACNL,IAAAA,QAAQ,IAAIA,QAAQ,CAACS,YAAD,CAApB;AACH,GAHD;;AAIA,SAAQ;AAAK,IAAA,SAAS,EAAElB,UAAU,CAACM,SAAD,gCAC1BD,SAD0B,GACZ,IADY,EAA1B;AAEJ,IAAA,GAAG,EAAEO,OAFD;AAEU,IAAA,KAAK,EAAEL,KAFjB;AAEwB,IAAA,OAAO,EAAEe;AAFjC,KAGLd,QAHK,CAAR;AAKH,CA5BD;;AA6BAL,UAAU,CAACoB,YAAX,GAA0B;AACtBlB,EAAAA,SAAS,EAAE,sBADW;AAEtBK,EAAAA,MAAM,EAAE;AAFc,CAA1B;AAIA,eAAeP,UAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport useToggle from 'react-use/esm/useToggle';\nimport useFullScreen from 'react-use/esm/useFullscreen';\nconst FullScreen = (props) => {\n    const { prefixCls, className, style, children, onChange, isBody, targetRef } = props;\n    const rootRef = useRef(null);\n    const [status, toggle] = useToggle(false);\n    const [domRef, setDomRef] = useState({ current: null });\n    const isFullScreen = useFullScreen(domRef, status, {\n        onClose: () => toggle(false)\n    });\n    useEffect(() => {\n        if (isBody) {\n            setDomRef({ current: document.documentElement });\n        }\n        else if (targetRef) {\n            setDomRef(targetRef);\n        }\n        else {\n            setDomRef(rootRef);\n        }\n    }, [props.isBody, props.targetRef]);\n    const changeFullScreen = () => {\n        toggle();\n        onChange && onChange(isFullScreen);\n    };\n    return (<div className={classNames(className, {\n        [`${prefixCls}`]: true\n    })} ref={rootRef} style={style} onClick={changeFullScreen}>\n      {children}\n    </div>);\n};\nFullScreen.defaultProps = {\n    prefixCls: 'ant-plus-full-screen',\n    isBody: false\n};\nexport default FullScreen;\n"],"file":"full-screen.js"}